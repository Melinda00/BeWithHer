
USE BeWithHer;

CREATE TABLE DOCTOR(
DOC_ID VARCHAR(12) NOT NULL,
DOC_PASWD VARCHAR(15) NOT NULL,
DOC_NAME VARCHAR(20) ,
DOC_SEX VARCHAR(2) CHECK(DOC_SEX='男' OR DOC_SEX='女'),
DOC_DEPT VARCHAR(20),
DOC_PHONE VARCHAR(11),
DOC_REMARK VARCHAR(100),
DOC_CTER  VARCHAR(2),
PRIMARY KEY (DOC_ID)
);

-- 创建用户信息表
CREATE TABLE UINFO(
U_ID VARCHAR(18) NOT NULL,
U_PASWD VARCHAR(15) NOT NULL,
U_NAME VARCHAR(20) , 
U_AGE VARCHAR(3) ,
U_PHONE VARCHAR(11),
U_PERIOD INT,
PRIMARY KEY (U_ID)
);

-- 创建咨询信息表
CREATE TABLE CONINFO(
BARCODE_ID VARCHAR(8) NOT NULL,
U_ID VARCHAR(18),
DOC_ID VARCHAR(12), 
CON_TIME DATETIME,
M_COLOR INT,
M_FLOW INT,
M_STATE INT,
M_GRADE INT,
CON_REMARK VARCHAR(100),
PRIMARY KEY (BARCODE_ID),
FOREIGN KEY (U_ID) REFERENCES UINFO(U_ID),
FOREIGN KEY (DOC_ID) REFERENCES  DOCTOR(DOC_ID)
);


select * from UINFO;
insert into UINFO  values('123', '123', '123', '1', '123', 30);
select * from DOCTOR;
delete from UINFO
where U_ID = '123';

select * from CONINFO;
insert into DOCTOR values('789789', '789', 'charlie', '男', 'aaa', '15605369455', 'asd', 'Y');
insert into CONINFO values('12345678', '123123', '789789', '2000-08-15', 1, 2, 3, 1, '大出血');

select * from CONINFO;
select * from UINFO;
select * from UINFO
limit 1 offset 2;

select count(U_ID)
from UINFO;

select * from DOCTOR;

select * from DOCTOR
where cast(DOC_ID as int) > '98';

SELECT CAST(DOC_ID AS INT) FROM DOCTOR;

SELECT * FROM DOCTOR where CONVERT(DOC_ID, UNSIGNED INTEGER)  > 999 limit 10;
